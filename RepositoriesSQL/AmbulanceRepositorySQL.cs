using Microsoft.Data.SqlClient;
using Microsoft.Extensions.Configuration;
using RegionSyd.Models;
using System;
using System.Collections.Generic;

namespace RegionSyd.RepositoriesSQL
{
    public class AmbulanceRepositorySQL
    {
        private readonly string _connectionString;

        public AmbulanceRepositorySQL()
        {
            _connectionString = App.Configuration.GetConnectionString("DefaultConnection");
        }

        // Get all ambulances
        public List<Ambulance> GetAllAmbulances()
        {
            var ambulances = new List<Ambulance>();
            using (var connection = new SqlConnection(_connectionString))
            {
                connection.Open();
                string query = "SELECT AmbulanceId, RegionId, Status FROM Ambulance";
                using (var command = new SqlCommand(query, connection))
                {
                    using (var reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            ambulances.Add(new Ambulance
                            (
                                reader.GetInt32(0),
                                reader.GetInt32(1),
                                reader.GetString(2)
                            ));
                        }
                    }
                }
            }
            return ambulances;
        }

        // Get available ambulances
        public List<Ambulance> GetAvailableAmbulances()
        {
            var ambulances = new List<Ambulance>();
            using (var connection = new SqlConnection(_connectionString))
            {
                connection.Open();
                string query = "SELECT AmbulanceId, RegionId, Status FROM Ambulance WHERE Status = 'Available'";
                using (var command = new SqlCommand(query, connection))
                {
                    using (var reader = command.ExecuteReader())
                    {
                        while (reader.Read())
                        {
                            ambulances.Add(new Ambulance
                           (
                               reader.GetInt32(0),
                               reader.GetInt32(1),
                               reader.GetString(2)
                           ));
                        }
                    }
                }
            }
            return ambulances;
        }

        // Save a new ambulance
        public void SaveAmbulance(Ambulance ambulance)
        {
            using (var connection = new SqlConnection(_connectionString))
            {
                connection.Open();
                string query = "INSERT INTO Ambulance (RegionId, Status) OUTPUT INSERTED.AmbulanceId VALUES (@RegionId, @Status)";
                using (var command = new SqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("@RegionId", ambulance.RegionId);
                    command.Parameters.AddWithValue("@Status", ambulance.Status);

                    // Get the new AmbulanceId generated by the database
                    ambulance.AmbulanceId = (int)command.ExecuteScalar();
                }
            }
        }

        // Remove an ambulance
        public void RemoveAmbulance(int ambulanceId)
        {
            using (var connection = new SqlConnection(_connectionString))
            {
                connection.Open();
                string query = "DELETE FROM Ambulance WHERE AmbulanceId = @AmbulanceId";
                using (var command = new SqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("@AmbulanceId", ambulanceId);
                    command.ExecuteNonQuery();
                }
            }
        }

        // Update ambulance status
        public void UpdateAmbulanceStatus(int ambulanceId, string status)
        {
            using (var connection = new SqlConnection(_connectionString))
            {
                connection.Open();
                string query = "UPDATE Ambulance SET Status = @Status WHERE AmbulanceId = @AmbulanceId";
                using (var command = new SqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("@Status", status);
                    command.Parameters.AddWithValue("@AmbulanceId", ambulanceId);
                    command.ExecuteNonQuery();
                }
            }
        }

        // Get ambulance by ID
        public Ambulance GetAmbulanceById(int ambulanceId)
        {
            Ambulance ambulance = null;
            using (var connection = new SqlConnection(_connectionString))
            {
                connection.Open();
                string query = "SELECT AmbulanceId, RegionId, Status FROM Ambulance WHERE AmbulanceId = @AmbulanceId";
                using (var command = new SqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("@AmbulanceId", ambulanceId);
                    using (var reader = command.ExecuteReader())
                    {
                        if (reader.Read())
                        {
                            ambulance = (new Ambulance
                           (
                               reader.GetInt32(0),
                               reader.GetInt32(1),
                               reader.GetString(2)
                           ));
                        }
                    }
                }
            }
            return ambulance;
        }
    }
}
